@import '../../index.css';

.todohead {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  justify-content: space-between;
  transition: all var(--global-transition-time) ease-out 0s;
  opacity: 1;
  overflow: hidden;
}

.todohead.full {
  height: var(--global-todo-height);
}

.todohead.preview {
  height: var(--global-todo-preview-height);
}

.todoface {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  padding: 0 var(--global-left-padding);
}

.todohead:hover{
  opacity: 90%;
}

.todohead-row {
  display: flex;
  overflow: hidden;
}

.todohead-row__cancel {
  justify-content: space-between;
}

.todohead button {
  font-size: 1rem;
  font-weight: bold;
  cursor: pointer;
  background-color: transparent;
  color: inherit;
  user-select: none;
  border: none;
  transition: all 0.1s ease-out 0s;
}

.todohead button:hover {
  opacity: 50%;
}

.todohead-row__cancel button {
  width: 1.5rem;
  height: 1.5rem;
  border: 2px solid;
  border-radius: 25px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.todohead-row__cancel button span {
  display: flex;
  justify-content: center;
  align-items: center;
  font-family: Helvetica;
}

/* Note: apparently there is no native way to make textarea expand like a div to accommodate its content
For a hack, try 'The Cleanest Trick for Autogrowing Textareas' on CSS tricks */
.todohead textarea {
  background-color:transparent;
  border: none;
  resize: none;
  font: inherit;
  font-weight:bold;
  outline: none;
  color: inherit;
  padding: 0px;
  flex-grow: 1;
}

.todohead textarea::placeholder {
  color: inherit;
}

.todohead .label {
  height: 1.25em;
  margin: 0 0 0.5em 0; 
}

.label textarea {
  width: 33%;
}

.todohead .display {
  margin: 0 0 0.5em 0;
}

.arrowopen {
  transform:rotate(90deg);
}

.todohead h5 {
  flex-grow: 1;
}

.collapsed {
  height: 0px;
}

.transparent {
  opacity: 0;
}

.opaque {
  opacity: 1;
}

.edge-hitbox {
  height: 5px;
}

.enter {
  opacity: 0;
}

.enterActive {
  opacity: 1;
  transition: opacity var(--global-transition-time);
}

.exit {
  opacity: 1;
}

.exitActive {
  opacity: 0;
  transition: opacity var(--global-transition-time);
}